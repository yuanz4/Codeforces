https://codeforces.com/contest/1455
B: 对于每个x找到n使其<=前n项和，记为sum(n) = n*(n+1)/2，sum(n-1) < x <= sum(n)。所以0 <= sum(n)-x < n，而把其中一个数替换为-1可以将sum(n)减小[2, n+1]。所以只有diff为1的情况是取不到的，要变为sum(n)-1，多一步，别的情况为n
D: key observation是：1. 每次替换都会使x变大，比x小的元素无法调整了，因此那些元素一定得是sorted；2. 一定要从头开始调整unsorted，假如从这里的2开始，[1, 3, 2, 3], x = 1，那么只会让中间的元素更小，因而更加不可能sorted；3. 从头开始sort，假如出现了一处unsorted，那就得往前把所有>x的都替换掉，[0, 3, 5, 4], x = 1，在这里需要把[3, 5]都替换掉；4. 替换完之后与下一个比较，如果不sorted则返回-1，[0, 3, 4, 2], x = 1，这里2<3，所以也间接说明了valley只能比前一个小，得要比前第二个大；5. 当在替换的sequence中有重复元素时，只有当a[i]>x的时候才swap，[2, 2, 3, 2], x = 1，在这里x被替换为2之后应该直接跳到3。做的时候就是没发现最后重复的情况导致没debug出来，这种做法为O(n)
D_shorter: 当!is_sorted时，找到第一个比x大的数字进行替换，与前一种思路一致，更加好写，但是为O(n^2)
E: 